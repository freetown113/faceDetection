cmake_minimum_required(VERSION 3.14)

project(libbil)

if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 17)
endif()

find_package(CUDA 10.2 REQUIRED)
find_package(OpenCV REQUIRED)	

set(cuLIBs ${CMAKE_CURRENT_SOURCE_DIR}/Plugins/cuda/lib)
set(SRC ${CMAKE_CURRENT_SOURCE_DIR}/src)
set(INCLUDE ${CMAKE_CURRENT_SOURCE_DIR}/include)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/bin)
set(TENSORRT_ROOT /usr/lib/x86_64-linux-gnu)

add_executable(libil ${SRC}/main.cpp)

target_sources(libil PRIVATE ${SRC}/blob.cpp)
target_sources(libil PRIVATE ${SRC}/gpuprocess.cpp)
target_sources(libil PRIVATE ${SRC}/netbuilder.cpp)
target_sources(libil PRIVATE ${SRC}/TRuntime.cpp)
target_sources(libil PRIVATE ${SRC}/networkSelection.cpp)
target_sources(libil PRIVATE ${SRC}/nmsPlugin.cpp)
target_sources(libil PRIVATE ${SRC}/gridAnchorPlugin.cpp)
target_sources(libil PRIVATE ${SRC}/builderFace.cpp)
target_sources(libil PRIVATE ${SRC}/builderDistinguish.cpp)
    
target_include_directories(libil PRIVATE ${CUDA_INCLUDE_DIRS})
target_include_directories(libil PRIVATE ${INCLUDE})
target_include_directories(libil PRIVATE /usr/include/x86_64-linux-gnu)
target_include_directories(libil PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/Plugins/include)

target_link_libraries(libil ${CUDA_LIBRARIES})
target_link_libraries(libil ${cuLIBs}/liballClassNMS.so)
target_link_libraries(libil ${cuLIBs}/libbboxUtils.so)
target_link_libraries(libil ${cuLIBs}/libcommon.so)
target_link_libraries(libil ${cuLIBs}/libdetectionInferencePP.so)
target_link_libraries(libil ${cuLIBs}/libdetectionInference.so)
target_link_libraries(libil ${cuLIBs}/libdecodeBBoxesPP.so)
target_link_libraries(libil ${cuLIBs}/libdecodeBBoxes.so)
target_link_libraries(libil ${cuLIBs}/libgatherTopDetections.so)
target_link_libraries(libil ${cuLIBs}/libgatherTopDetectionsPP.so)
target_link_libraries(libil ${cuLIBs}/libgridAnchorInference.so)
target_link_libraries(libil ${cuLIBs}/libnmsPlugin.so)
target_link_libraries(libil ${cuLIBs}/libsortScoresPerImage.so)
target_link_libraries(libil ${cuLIBs}/libsortScoresPerClass.so)
target_link_libraries(libil ${cuLIBs}/libreducedMath.so)
target_link_libraries(libil ${cuLIBs}/libpermuteData.so)

target_link_libraries(libil ${TENSORRT_ROOT}/libnvinfer.so)
target_link_libraries(libil ${TENSORRT_ROOT}/libnvinfer_plugin.so)
target_link_libraries(libil ${TENSORRT_ROOT}/libnvonnxparser.so)
target_link_libraries(libil ${TENSORRT_ROOT}/libnvparsers.so)
target_link_libraries(libil /usr/lib/x86_64-linux-gnu/libopencv_imgproc.so)
target_link_libraries(libil /usr/lib/x86_64-linux-gnu/libopencv_highgui.so)
target_link_libraries(libil /usr/lib/x86_64-linux-gnu/libopencv_core.so)
target_link_libraries(libil /usr/lib/x86_64-linux-gnu/libopencv_imgcodecs.so)
target_link_libraries(libil /usr/local/cuda-10.2/lib64/libnppidei.so)
target_link_libraries(libil /usr/local/cuda-10.2/lib64/libnppial.so)
target_link_libraries(libil /usr/local/cuda-10.2/lib64/libnppig.so)
target_link_libraries(libil ${CMAKE_CURRENT_SOURCE_DIR}/Plugins/cuda/lib/libdetectionInference.so)
target_link_libraries(libil ${CMAKE_CURRENT_SOURCE_DIR}/Plugins/cuda/lib/libdetectionInferencePP.so)
target_link_libraries(libil ${CMAKE_CURRENT_SOURCE_DIR}/Plugins/cuda/lib/libbboxUtils.so)
target_link_libraries(libil ${CMAKE_CURRENT_SOURCE_DIR}/Plugins/cuda/lib/libcommon.so)
target_link_libraries(libil ${CMAKE_CURRENT_SOURCE_DIR}/Plugins/cuda/lib/libreducedMath.so)
target_link_libraries(libil ${CMAKE_CURRENT_SOURCE_DIR}/Plugins/cuda/lib/libnmsPlugin.so)
target_link_libraries(libil ${CMAKE_CURRENT_SOURCE_DIR}/Plugins/cuda/lib/libsortScoresPerClass.so)
target_link_libraries(libil ${CMAKE_CURRENT_SOURCE_DIR}/Plugins/cuda/lib/libgridAnchorInference.so)

target_link_libraries(libil stdc++fs)

install(TARGETS libil DESTINATION bin)
install(FILES ${LIBs}/libgpuprocess.so DESTINATION bin)
